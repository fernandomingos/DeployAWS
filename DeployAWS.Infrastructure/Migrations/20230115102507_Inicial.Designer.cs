// <auto-generated />
using System;
using DeployAWS.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DeployAWS.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230115102507_Inicial")]
    partial class Inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.5");

            modelBuilder.Entity("DeployAWS.Domain.Entitys.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.Property<bool>("IsAtivo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nome")
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.Property<string>("Sobrenome")
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.HasKey("Id");

                    b.ToTable("Clientes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCadastro = new DateTime(2023, 1, 15, 7, 25, 7, 203, DateTimeKind.Local).AddTicks(1648),
                            Email = "cliente1@teste.com",
                            IsAtivo = true,
                            Nome = "Cliente 1",
                            Sobrenome = "Teste 1"
                        },
                        new
                        {
                            Id = 2,
                            DataCadastro = new DateTime(2023, 1, 15, 7, 25, 7, 203, DateTimeKind.Local).AddTicks(2200),
                            Email = "cliente2@teste.com",
                            IsAtivo = true,
                            Nome = "Cliente 2",
                            Sobrenome = "Teste 2"
                        },
                        new
                        {
                            Id = 3,
                            DataCadastro = new DateTime(2023, 1, 15, 7, 25, 7, 203, DateTimeKind.Local).AddTicks(2206),
                            Email = "cliente3@teste.com",
                            IsAtivo = true,
                            Nome = "Cliente 3",
                            Sobrenome = "Teste 3"
                        },
                        new
                        {
                            Id = 4,
                            DataCadastro = new DateTime(2023, 1, 15, 7, 25, 7, 203, DateTimeKind.Local).AddTicks(2207),
                            Email = "cliente4@teste.com",
                            IsAtivo = true,
                            Nome = "Cliente 4",
                            Sobrenome = "Teste 4"
                        },
                        new
                        {
                            Id = 5,
                            DataCadastro = new DateTime(2023, 1, 15, 7, 25, 7, 203, DateTimeKind.Local).AddTicks(2209),
                            Email = "cliente5@teste.com",
                            IsAtivo = true,
                            Nome = "Cliente 5",
                            Sobrenome = "Teste 5"
                        });
                });

            modelBuilder.Entity("DeployAWS.Domain.Entitys.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("IsDisponivel")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nome")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.ToTable("Produtos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDisponivel = true,
                            Nome = "Lápis",
                            Valor = 0m
                        },
                        new
                        {
                            Id = 2,
                            IsDisponivel = true,
                            Nome = "Caderno",
                            Valor = 0m
                        },
                        new
                        {
                            Id = 3,
                            IsDisponivel = true,
                            Nome = "Borracha",
                            Valor = 0m
                        },
                        new
                        {
                            Id = 4,
                            IsDisponivel = true,
                            Nome = "Caneta",
                            Valor = 0m
                        },
                        new
                        {
                            Id = 5,
                            IsDisponivel = true,
                            Nome = "Apontador",
                            Valor = 0m
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
